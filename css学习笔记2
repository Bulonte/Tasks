## 清除浮动

### 浮动副作用

当元素设置float浮动后，该元素就会脱离文档流并向左或向右移动

1. 浮动元素会造成父元素高度塌陷
2. 后续元素会受到影响



no float的情况



float 的情况

很明显的看到container那个盒子消失了，借助开发者工具![image-20231122164115552](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231122164115552.png)

我们可以很容易的看到这个container盒子是存在的，但是他的高度变为零了。这就时由浮动造成的父元素高度塌陷问题



### 解决方案

1. 给父元素设置高度
2. 受影响的元素增加clear属性
3. overflow清除浮动
4. 伪对象方式



#### 父元素设置高度

如果父元素塌陷，可以给父元素设置高度，撑开元素本身大小

![image-20231122220929792](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231122220929792.png)



#### 受影响的元素增加clear属性

![image-20231122223911109](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231122223911109.png)

![image-20231122223950135](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231122223950135.png)



#### overflow清除浮动

![image-20231122224434333](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231122224434333.png)





#### 伪对象方式

![image-20231122224629371](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231122224629371.png)

![image-20231122225028627](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231122225028627.png)





## 定位

### 定义

`position`属性指定了元素的定位类型

![image-20231122232053136](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231122232053136.png)

其中，**绝对定位和固定定位会脱离文档流**

设置定位之后：可以使用四个方向值进行调整位置：`left`,`top`,`right`,`bottom`



### 相对定位

![image-20231123090207498](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123090207498.png)

![image-20231123090235357](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123090235357.png)



### 绝对定位

![image-20231123093305673](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123093305673.png)



![image-20231123094130210](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123094130210.png)





### 固定定位

![image-20231123093928338](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123093928338.png)

固定定位与绝对定位的区别在于：绝对定位会随着页面滑动而滑动，但是固定定位**永远固定不动**



### Z-index

`Z-index`属性设置元素的堆叠顺序。拥有更高堆叠的元素总是会处于堆叠顺序较低的元素的前面

![image-20231123094950732](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123094950732.png)

![image-20231123095019739](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123095019739.png)





## css3常用新特性

### 圆角

![image-20231123095318800](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123095318800.png)

![image-20231123095607965](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123095607965.png)





### 阴影

​	box-shadow向框添加一个或多个阴影。

![image-20231123095823051](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123095823051.png)

![image-20231123100231612](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123100231612.png)



### 动画

动画是使元素从一种样式逐渐变化为另一种样式的效果

我们可以改变任意多的样式任意多的次数

用百分比来规定变化发生的时间，或用关键词`from`和`to`，等同于0%和100%

0%是动画的开始，100%是动画的完成。





#### 创建动画

使用**@keyframes**规则，我们可以创建动画

![image-20231123100954976](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123100954976.png)





#### 使用动画

我们使用animation来执行动画

![image-20231123101241806](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123101241806.png)

![image-20231123101317717](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123101317717.png)

![image-20231123101347199](C:\Users\钟佑安\AppData\Roaming\Typora\typora-user-images\image-20231123101347199.png)




### 当容器不足时

当容器不足以横向摆放内容时，会在下一行摆放![image](https://github.com/Bulonte/Tasks/assets/149052453/67a4d3ce-22a1-4379-86a8-4491b4894548)

